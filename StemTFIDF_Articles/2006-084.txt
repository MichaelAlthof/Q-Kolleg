BERLIN

SFB 6 4 9 E C O N O M I C R I S K

SFB 649 Discussion Paper 2006-084
PLS Path Modeling ­ A Software Review
Dirk Temme* Henning Kreis* Lutz Hildebrandt*
* Institute of Marketing, Humboldt-Universität zu Berlin, Germany
This research was supported by the Deutsche Forschungsgemeinschaft through the SFB 649 "Economic Risk".
http://sfb649.wiwi.hu-berlin.de ISSN 1860-5664
SFB 649, Humboldt-Universität zu Berlin Spandauer Straße 1, D-10178 Berlin

PLS Path Modeling ­ A Software Review1
Dirk Temme, Henning Kreis and Lutz Hildebrandt Institute of Marketing, Humboldt University Berlin Spandauer Straße 1, 10099 Berlin {temme, kreis, hildebr}@wiwi.hu-berlin.de Abstract
After years of stagnancy, PLS path modeling has recently attracted renewed interest from applied researchers in marketing. At the same time, the availability of software alternatives to Lohmöller's LVPLS package has considerably increased (PLS-Graph, PLS-GUI, SPAD-PLS, SmartPLS). To help the user to make an informed decision, the existing programs are reviewed; their strengths and weaknesses are identified. Furthermore, analyzing simulated data reveals that the signs of weights/factor loadings and path coefficients can vary considerably across the different programs. Thus, applied researchers should treat the interpretation of their results with caution. Compared to programs for analysis of covariance structure models (LISREL approach), PLS path modeling software is on equal footing regarding ease of use, but clearly lags behind in terms of methodological capabilities. Keywords: PLS path modeling, Marketing, Formative indicators, Reflective indicators JEL-Codes: C31, C87, M31
1 Financial support by the Deutsche Forschungsgemeinschaft (DFG) through the SFB 649 "Economic Risk" is gratefully acknowledged.

PLS Path Modeling ­ A Software Review
Dirk Temme1, Henning Kreis2, and Lutz Hildebrandt3
1 Institute of Marketing, Humboldt University Berlin, Spandauer Str. 1, 10099 Berlin, Germany, temme@wiwi.hu-berlin.de
2 kreis@wiwi.hu-berlin.de 3 hildebr@wiwi.hu-berlin.de
1 Introduction
When it comes to modeling relationships between latent variables, mainly two different methodological approaches can be distinguished: Covariance structure analysis on the one hand and PLS path modeling (not to be confused with PLS regression) on the other. Although both methods emerged roughly at the same time, their development took a rather diverse course. Since the introduction of the first LISREL version in the early 1970s, the software available for covariance structure analysis has experienced substantial progress with respect to ease-of-use and methodological capabilities. Graphical interfaces in programs like AMOS or LISREL have freed the user from having to specify his/her model in matrix or equation form. Simultaneously, estimation methods for non-normal/categorical data as well as multi-level, multi-group, and finite mixture models have emerged, thus offering a wide range of possible applications. Meanwhile, covariance structure analysis is arguably one of the most popular methods used in the social sciences (e.g., marketing).
In contrast, PLS path modeling has, until recently, rarely been applied in marketing although its basic algorithms were developed in the 1970s and the first software packages were publicly available in the 1980s (LVPLS (Lohm¨oller, 1984), PLSPath (Sellin, 1989)). The rather limited use of PLS path modeling in the last decades can be explained to a considerable degree by the lack of progress regarding the software's ease-of-use and methodological options. Recently, however, this situation has changed tremendously. Currently, researchers can choose between several alternative software solutions (PLS-GUI, VisualPLS, PLS-Graph, SmartPLS, SPAD-PLS ) which provide a clear improvement especially in terms of user-friendliness. Furthermore, growing need in modeling so-called formative constructs, particularly in marketing and management/organizational research (e.g., Diamantopoulos and Winklhofer (2001), Jarvis et al. (2003), MacKenzie et al. (2005)), has stimulated great interest in applying the PLS path modeling approach. Although models with formative constructs can, in principle, also be estimated within covari-

2 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
ance structure analysis (e.g., MIMIC models), doing so causes specific identification problems which are not an issue in PLS (e.g., MacCallum and Browne (1993)).
Against the background of a growing number of PLS software packages and an increasing differentiation in the programs' capabilities, a comprehensive review would help researchers to decide on the specific PLS program to be used in their studies. To the best of our knowledge, no such review of PLS path modeling software currently exists. In order to close this gap, we aim at providing an informative software overview by identifying specific strengths and weaknesses of the relevant programs. In the remaining part of the article, we offer a brief description of each software package; in addition, screenshots will give an impression of how analyses are set up in the different programs. Subsequently, the software is assessed with respect to the following criteria: requirements, methodological options, and ease-of-use. Next, estimation results for different simulated data sets, each focusing on a specific issue, are compared. Finally, the main conclusions of the study are discussed.
2 PLS Path Modeling Software
Besides LVPLS, the software overview includes several more recent software packages for PLS path modeling: PLS-GUI, VisualPLS, PLS-Graph, SPADPLS, and SmartPLS. Following the description of LVPLS, we will discuss PLS-GUI and VisualPLS which are basically graphical interfaces to LVPLS. Finally, the remaining programs are characterized. In contrast to the former software, these programs are more or less self-contained implementations of the algorithms developed by Wold (1982, 1985) and Lohmo¨ller (1987). This review includes those program versions available to the authors as of August 2006. It should be noted, that all programs (except LVPLS ) are constantly under development and can therefore be expected to offer additional features in the future.
LVPLS: The DOS-based program LVPLS 1.8 (Lohm¨oller, 1987) includes two different modules for estimating path models. Whereas LVPLSC analyzes the covariance matrix of the observed variables, the LVPLSX module is able to process raw data. In order to specify the input file an external editor is necessary. The input specification requires that the program parameters are defined at specific positions in the file ­ a format which resembles punchcards (see upper panel in Figure 1). Results are reported in a plain text file. The program offers blindfolding and jackknifing as resampling methods in case raw data has been analyzed. When analyzing covariance/correlation matrices, resampling techniques cannot be applied.
PLS-GUI: The Windows-based PLS-GUI (Li, 2005) provides a graphical interface for LVPLS which supports both the analysis of raw data (LVPLSX) as well as covariance information (LVPLSC). To specify a model,

PLS Path Modeling ­ A Software Review

3

LVPLS

PLS-GUI
Fig. 1. Specification of Path Models in PLS Software: LVPLS, PLS-GUI
the user is led through a stepwise procedure which offers a menu at each step (see lower panel in Figure 1). Additional options (e.g., weighting schemes, missing data code) are to be chosen in a separate window. The program finally creates an input file which is processed by the executable file pls.exe of LVPLS. If required, the input file can be modified by the user. The output is the same as for LVPLS. The current version offers a bootstrap option as an additional feature not provided by LVPLS.
VisualPLS: VisualPLS (Fu, 2006a) is a graphical user interface for LVPLS running in the Windows environment which enables the analysis of raw data only. The path model is specified by drawing the latent variables and by assigning the indicators in a pop-up window (see upper panel in Figure 2). Based on the graphical model, the program produces a separate

4 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
LVPLS input file, which is run by LVPLSX (pls.exe). Different formats of input data are supported. The results are offered as LVPLS output (plain text file) as well as in HTML/Excel format. In addition, a path model showing the estimated parameters is displayed. Beyond blindfolding and jacknifing, bootstrapping has been integrated. Special support for specifying moderating effects and second order factors is offered.
PLS-Graph: PLS-Graph (Chin, 2003) is a Windows-based program which uses modified routines of LVPLS, but only processes raw data (LVPLSX). In order to specify the model, a graphical interface can be used which provides some tools for drawing a path diagram (see lower panel in Figure 2). Different options (e. g., weighting scheme, resampling method) can be chosen from a menu. Although the generated input file is a text file, it can only be processed by PLS-Graph, but not by LVPLS. Estimation results are presented in ASCII format as well as in a graphical path model; resampling methods include blindfolding, jackknifing, and bootstrapping.
SPAD-PLS: This program is part of the comprehensive data analysis software SPAD (running under Windows) which is offered by the French company Test&Go. SPAD-PLS (Test&Go, 2006) does not process covariance information but needs raw data instead. Models can be specified with a menu or graphically in a Java applet; the remaining settings may be adjusted in additional menu windows (see upper panel in Figure 3). Different options for handling missing data (but see section 3.2) and multicollinearity are provided. Results are reported both as a path diagram and as text or Excel file; blindfolding, jackknifing, and bootstrapping (including confidence intervals) are available. In the non-graphical manual mode transformations of latent variables (squares, cross-products) can be specified.
SmartPLS: Since SmartPLS (Ringle et al., 2005) is Java-based, it is independent from the user's operating system. Again, only raw data can be analyzed. The model is specified by drawing the structural model for the latent variables and by assigning the indicators to the latent variables via "drag & drop" (see lower panel in Figure 3). The output is provided in HTML, Excel or Latex format, as well as a parameterized path model. Bootstrapping and blindfolding are the resampling methods available. Like in VisualPLS, the specification of interaction effects is supported. A special feature of SmartPLS is the finite mixture routine (FIMIX). Such an option might be of interest if unobserved heterogeneity is expected in the data (McLachlan and Peel, 2000).

PLS Path Modeling ­ A Software Review

5

VisualPLS
PLS-Graph Fig. 2. Specification of Path Models in PLS Software: VisualPLS, PLS-Graph

6 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
SPAD-PLS
SmartPLS Fig. 3. Specification of Path Models in PLS Software: SPAD-PLS, SmartPLS

PLS Path Modeling ­ A Software Review
3 Comparison and Recommendations

7

In order to support the user in making an informed decision about the software to be used in his/her study, programs are compared with respect to several features which can be subsumed under the following headings: requirements (e. g., operating system, data), methodological options (e. g., weighting scheme, resampling methods), and ease-of-use (e.g., specification, output format). In addition, we also point to some issues the researcher should pay attention to when using a specific program. The main properties of the programs are summarized in Tables 1, 2, and 3.

3.1 Requirements
Comparing the software with respect to their system requirements reveals that users of UNIX/LINUX or Mac systems have to use the platform-independent SmartPLS program. Further requirements concern the analyzed data. All programs at present expect that the indicators of the latent variables are continuous, or ­ for instance in the case of rating scales with 5 or more answer categories ­ approximate a continuous scale. In addition, binary exogenous variables can be included in the analysis. If only covariance matrices are available as data input, the choice is currently restricted to LVPLS or PLS-GUI. Except for LVPLS, all programs require a common definition of missing values for all variables (e.g., -999). In general, all programs are able to process ASCII data although some software requires a conversion into specific data formats (e.g., .sba in SPAD-PLS ). SPAD-PLS also supports data formats of common software packages like SPSS and SAS which are converted in a data editor or exchange module.

3.2 Methodological Options
Missing Data
Data sets where at least some values of their variables are missing are ubiquitious in empirical research. In order to deal with missing data, several alternative approaches have been proposed (e. g., Little and Rubin (2002)). LVPLS offers a specific treatment in the case of missing data which combines mean value imputation and pairwise deletion in the course of the estimation (Lohm¨oller (1984); for a more comprehensive description see Tenenhaus et al. (2005)). This missing data treatment is also provided by the graphical interfaces (PLS-GUI, VisualPLS ) as well as by PLS-Graph and SPAD-PLS. In contrast, SmartPLS offers two options equivalent to some data pre-processing which either substitute the mean over all available cases of a variable for the missing values or which delete those cases with missing data (casewise deletion). Since casewise deletion throws away a lot of useful information and thus leads to lower efficiency, this procedure is not to be recommended. Even the

8 Dirk Temme, Henning Kreis, and Lutz Hildebrandt

Requirements

Features

LVPLS 1.8

PLS-GUI 2.0.1

Lohm¨oller (1987)

Li (2005)

Operating system DOS

Windows

Data

Raw data / covariance matrix

Scale level

Metric / binary exogenous variables

Definition of missing Individual definition of MV Common definition of MV

values (MV)

for each variable

for all variables

Data format

.inp (ASCII)

.dat (ASCII)

· Mean=0, Var=1

Data metric

· Mean=0, Var=1, rescal. · Mean=1, rescal.

· Original

Missing data treatment

Fixed (pairwise elimination and/or imputation of means (see Section 3.2))

Weighting scheme

Factor-, centroid-, or path weighting

· Blindfolding

· Blindfolding

Resampling

· Jackknifing

· Jackknifing

· Bootstrapping

Cross-validation

· CV-redundancy · CV-communality

Not available

Specification

Text editor

Quasi graphically

Output

ASCII

Graphical output

Not available

Documentation

Lohm¨oller (1984)

Li (2003)

Methodology

Ease-of-use

Internet Availability

not available

http://dmsweb.moore.sc. edu/yuanli/pls-gui/ Freeware

Table 1. Overview of PLS Path Modeling Software (Part 1) Details represent the stage of development as of August 2006.

other traditional methods of dealing with missing data (i.e., pairwise deletion, mean imputation) have several shortcomings such as computing covariances (mode B) based on different sample sizes and biased parameter estimates (Allison (2002), Haitovsky (1968)), for example. Meanwhile, more advanced data imputation methods are announced for the next release of SPAD-PLS which will include an EM algorithm as well as the NIPALS approach.
Multi-collinearity
Multi-collinearity can be a problem both for the estimation of indicator weights in the case of formative constructs (mode B) and for the estimation

PLS Path Modeling ­ A Software Review

9

Requirements

Features

VisualPLS 1.04

PLS-Graph 3.00

Fu (2006a)

Chin (2003)

Operating system

Windows

Data

Raw data

Scale level

Metric / binary exogenous variables

Definition of missing values (MV)

Common definition of MV for each variable

Data format

.dat (ASCII), .csv

.raw (ASCII)

· Mean=0, Var=1

Data metric

· Mean=0, Var=1, rescal. · Mean=1, rescal.

· Original

Missing data treatment

Fixed (pairwise elimination and/or imputation of means (see Section 3.2))

Weighting scheme

Factor-, centroid-, or path weighting

Resampling

Blindfolding, jacknifing, and bootstrapping

Cross-validation

CV-redundancy and CV-communality

Special features

Interaction- and 2nd-order Individual and construct

factor model support

level sign correction for

bootstrapping

Specification

Graphically

Output

ASCII, Excel, HTML

ASCII

Graphical output

Path diagram

Documentation

Fu (2006b)

Chin (2001)

Methodology

Ease-of-use

Internet Availability

http://www2.kuas.edu. tw/prof/fred/vpls/index. html

http://www.cba.uh.edu/ plsgraph/

Freeware

Table 2. Overview of PLS Path Modeling Software (Part 2) Details represent the stage of development as of August 2006.

of the relationships among latent variables. Possible means to detect severe multi-collinearity with respect to formative indicators are inspecting the correlation matrix, calculating the variance inflation factors, or examining the condition index. SPAD-PLS at present is the only program which addresses the problem of multi-collinearity by providing a PLS regression routine for estimating weights (Mode PLS) and path coefficients (PLS regression instead of OLS regression). PLS regression searches for a set of components which decompose the vector y of the endogenous variable and the matrix X of explanatory variables in such a way that the explained covariance between y and X is maximized.

10 Dirk Temme, Henning Kreis, and Lutz Hildebrandt

Features

SPAD-PLS

SmartPLS 2.0 M3

Test&Go (2006)

Ringle et al. (2005)

Operating system Windows

Independent (Java)

Requirements

Data

Raw data

Scale level

Metric / binary exogenous variables

Definition of missing values (MV)

Common definition of MV for each variable

Data format

.sba (ASCII, SPSS, SAS) .txt (ASCII), .csv

Data metric

· Mean=0, Var=1 · Mean=0, Var=1, rescal. · Mean=1, rescal. · Original

Methodology

Missing data treat- Pairwise elimination or

ment

imputation of means, NIPALS/EM

Casewise elimination or imputation of means

Weighting scheme

Factor-, centroid-, or path weighting

· Blindfolding

· Blindfolding

Resampling

· Jackknifing

· Bootstrapping

· Bootstrapping

Cross-validation

· CV-redundancy · CV-communality

· CV-redundancy · CV-communality

Special features

PLS regression for weights Finite-mixture PLS; Inand path coefficients; confi- teraction model support; dence intervals for jacknif- Cronbach's alpha ing and bootstrapping; contribution to R2; check of unidimensionality of latent variables (eigenvalues)

Specification

Graphically

Output

ASCII, Excel

HTML, Latex, Excel

Ease-of-use

Graphical output

Path diagram

Documentation

Vinzi et al. (2004)

Hansmann and Ringle (2004)

Internet

http://www.testandgo.com http://www.smartpls.de

Availability

Test&Go

Freeware

 not implemented in the test version used for this review

Table 3. Overview of PLS Path Modeling Software (Part 3) Details represent the stage of development as of August 2006.

PLS Path Modeling ­ A Software Review 11
Resampling Methods
Since one of the appealing features of PLS path modeling is the fact that it does not rest on any distributional assumptions, significance levels for the parameter estimates which are based on normal theory are, strictly speaking, not suitable. Therefore, information about the variability of the parameter estimates and hence their significance has to be generated by means of resampling procedures. Whereas LVPS only offers blindfolding and jacknifing, all recent software packages include a bootstrap option. In order to assess the quality of the estimated model, several criteria for model validation have been proposed in the literature (for a discussion see, for example, Tenenhaus et al. (2005)). To calculate cross-validation indices, blindfolding is necessary and now offered by all programs. Except for PLS-GUI, cross-validated communality and redundancy measures are also provided in the programs' output by request.
In order to derive valid standard errors or t-values, applying bootstrapping is superior to the other two resampling methods. Therefore, in the following we will focus on the former. The bootstrap procedure approximates the sampling distribution of an estimator by resampling with replacement from the original sample. An important issue is that in PLS the signs of the latent variables are indetermined. Since arbitrary sign changes in the parameter estimates of the various bootstrap samples can increase their standard error to a substantial degree, procedures have been developed to correct for sign reversals. Here, both PLS-Graph and SmartPLS allow the user to choose between two correction procedures: In the first option (individual sign changes), the sign of each individual outer weight is made equal to the corresponding sign in the original sample. Because this procedure does not check for the overall coherence of the model as would be done if mental "reverse coding" (Chin, 2000) were performed, this option should be used with special care. The second option (construct level changes) compares the loadings for each latent variable with the original loadings and reverses the sign of the weights if the absolute value of the summed difference between the original and the bootstrap loadings is greater than the absolute value of the sum of the original loadings and the bootstrap loadings (Tenenhaus et al., 2005). However, both procedures do not guarantee that sign changes are properly handled. The graphical interfaces PLS-GUI and VisualPLS only offer construct level correction. Since SPAD-PLS uses the elements of the first eigenvector of a principal components analysis with predominantly positive signs, sign control aligns the signs in the bootstrap samples to those of the original sample.
Another possibility to gauge the significance of the PLS estimates is to calculate the confidence intervals from the bootstrap samples. So far this option using the percentile method is only implemented in SPAD-PLS.

12 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
Other Features
With respect to the inner weights, all programs offer the weighting schemes for estimating the inner model (centroid-, factor-, and path weighting) already available in LVPLS. A topic of special interest is the use of different sets of starting values for determining the outer weights. The starting values can have an impact on the sign of the estimated weights or factor loadings and therefore also on the path coefficients (see the simulation results for data set 1 in Section 4). Although this is not a statistical issue, it is important for the interpretation of the estimation results. None of the programs currently allow users to specify their own set of starting values. For those programs with fixed starting values (LVPLS, PLS-GUI, VisualPLS, PLS-Graph, and SmartPLS ), rearranging the order of indicators in a single block is the only means of exerting an influence on the sign (Tenenhaus et al., 2005). In SPADPLS, starting values are flexible insofar as the elements of the first eigenvector of a principal components analysis (PCA) with predominantly positive signs are used (Tenenhaus et al., 2005). SPAD-PLS provides normalized weights if all outer weights are positive as well as latent variable scores in the original metric.
3.3 Ease-of-Use
Compared to LVPLS, all recent PLS software is considerably more userfriendly. This is especially true for programs where the user can specify the model graphically and where the program displays a parameterized path diagram as output (VisualPLS, PLS-Graph, SPAD-PLS, and SmartPLS ). Particularly mentionable are the following features: In PLS-Graph, SPAD-PLS, and SmartPLS, it is easy to change the data set without having to specify the model again. Additionally, it is possible to save the complete analysis (including data set, model, and results) into a single project file.
VisualPLS and SmartPLS both give assistance in constructing product indicators for path models with interaction effects. The user can choose between mean centering and standardizing the corresponding manifest variables. Whereas VisualPLS only calculates product terms and includes them as new variables, SmartPLS directly adds the latent interaction term with its measures to the graphical path model. The program even modifies the indicator product terms automatically if the measurement models of the latent predictor/moderator variables are changed. In the case of reflective indicators, the interaction module is a convenient feature. However, the option should not be used in the case of formative constructs (for a discussion of estimating interaction effects in PLS path modeling see Chin et al. (2003)).
Most programs provide rich tool boxes which help to improve the layout of the path diagrams (color, size, text etc.). This especially applies to SPAD-PLS and SmartPLS. Even though graphical tools are not available under PLS-GUI,

PLS Path Modeling ­ A Software Review 13
model specification is nevertheless fairly easy. For all programs, user manuals document the application with example data. Additional information on SPAD-PLS, but also on PLS path modeling in general, can be accessed on the website www.esisproject.com of the European Satisfaction Index System (ESIS). Overall, PLS path analyses can be performed after a few initial practice sessions with all of the recent software.
4 Comparison Based on Simulated Data
Since all programs for PLS path modeling more or less use the same basic algorithms, estimation results should not differ for data sets without any "problematic" characteristics. In order to provoke distinct results, we therefore created three different data sets, each focusing on a specific issue: First, we demonstrate that programs can produce different solutions with respect to the parameter signs under certain conditions. Second, parameter estimates differ across programs if missing data are present. Third, we focus on the case that latent exogenous variables show a substantial degree of multi-collinearity. Since the programs' capabilities to cope with the data characteristics described above in part differ, the three simulated data sets have been analyzed with PLS-GUI, VisualPLS, PLS-Graph, SPAD-PLS, and SmartPLS. All data simulations have been performed in the statistical environment R.
4.1 Data Set 1 ­ Sign Changes and Bootstrapping
The first data set (N = 200) has been generated according to the parameterized path model in Figure 4. Because specification issues with respect to the measurement models for latent variables (reflective versus formative models) have recently been discussed rather intensively in the marketing research literature (e. g., Diamantopoulos and Winklhofer (2001), Jarvis et al. (2003)), we specify two different kinds of measurement models for the exogenous latent variables (1: formative/mode B, 2 and 3: reflective/mode A). Since formative indicators do not necessarily imply a specific pattern of correlations among them (Nunnally and Bernstein, 1994), a negative influence of the manifest variables x5 and x6 on the latent variable 1 has been specified. For both endogenous variables 1 and 2, only reflective measurement models are supposed (mode A).
Comparing the results for the programs used in our study reveals the following: Absolute parameter values are almost identical across the programs. For specific relations, however, the signs differ across the software packages (as reported in Table 4). Whereas PLS-GUI, VisualPLS and SPAD-PLS reproduce the signs of the population values used for the simulation, PLSGraph and SmartPLS generate opposite signs for the weights of the indicators x1 to x6. As a consequence, the estimated effect of the exogenous latent variable 1 on the latent endogenous variable 1 differs likewise. This finding can be

14 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
Fig. 4. Path Model Used for Simulating Data Set 1 (all variables are standardized) explained by different sets of starting values. Whereas LVPLS uses the sequence 1, 1, . . . , -1 as starting values for each block, SmartPLS, for example, uses the value 1 for all weights of a block. By performing mental "reverse coding" (Chin, 2000), the different solutions can be aligned. Thus, from a statistical point of view, sign changes across the programs are not an issue, but applied researchers should be sensitized to think thoroughly about the expected signs of the relationships between the manifest and latent variables as well as the effects between the latent variables. A peculiar finding emerges for VisualPLS : The signs for the weights of the formative construct 1 and the path coefficient for its effect on 1 in LVPLS (see Table 4) are reversed in the displayed path model. Since the reversed signs are used in the bootstrap procedure, they are reported in Table 5.
As discussed above, arbitrary sign changes can have a severe influence on the bootstrap results if not properly controlled for. Therefore, 500 bootstrap samples (each with N = 200) have been analyzed with the various programs. Construct level sign change is applied since for 1 the signs of the weights differ within the block. The results with respect to the bootstrap means/standard errors and the t-ratios are reported in Table 5. There are substantial differences

PLS Path Modeling ­ A Software Review 15

Programs

All PLS-GUI/ PLS-Graph/

VisualPLS/ SmartPLS

SPAD-PLS

Absolute values

Signs

Measurement model 1
Weights

x1 0.073 x2 0.339 x3 0.225 x4 0.335 x5 -0.345 x6 -0.822

+ + + + -

+ +

1  1

0.447

+

-

Structural model
Path coeff.

2  1

0.323

+

+

3  1

-0.180

-

-

1  2

0.482

+

+

Table 4. Comparisons of the Results for Data Set 1 ­ Estimates and Signs for Selected Parameters

in the time needed for the different programs to produce the bootstrap results for our sample. SPAD-PLS is by far the fastest software (the run took less than 5 seconds), followed by SmartPLS and PLSGraph (about 30 seconds). Both graphical interfaces for LVPLS, i. e. PLS-GUI and VisualPLS were rather slow in providing the bootstrap estimates (about 1 minute and 40 seconds).
Whereas the graphical interfaces for LVPLS as well as PLS-Graph and SmartPLS produce similar results, both the bootstrap means/standard errors and the t-ratios of SPAD-PLS in part differ considerably. For example, for the path of 1 to 1 the t-ratio is less than half the ratio which results from the other programs; the same applies to the weight for x6. These differences might be explained by the idiosyncratic way SPAD-PLS determines the starting values for each block and the corresponding sign control (Tenenhaus et al., 2005, p. 184). However, SPAD-PLS does not consistently produce the lowest t-ratios.
4.2 Data Set 2 ­ Missing Data
In order to compare the results of the different programs in the case of missing data, a very simple model is used for data simulation in which a formative construct only influences one latent variable measured by reflective indicators.

Weights

Structural Measurement model model 1

16 Dirk Temme, Henning Kreis, and Lutz Hildebrandt Table 5. Comparisons of the Bootstrap Results for Data Set 1 ­ Selected Parameters

Original

Bootstrap

estimate

means

standard errors

t-ratios

PLS- Visual PLS- SPAD- Smart PLS- Visual PLS- SPAD- Smart PLS- Visual PLS- SPAD- Smart

GUI PLS Graph PLS PLS GUI PLS Graph PLS PLS GUI PLS Graph PLS PLS

x1 x2 x3 x4 x5 x6 1  1 2  1 3  1 1  2

0.073 0.339 0.225 0.335 -0.345 -0.822 0.447 0.323 -0.180 0.482

0.070 -0.127 -0.056 0.078 -0.073 0.139 0.092 0.325 -0.321 -0.336 0.371 -0.318 0.114 0.123 0.225 -0.222 -0.239 0.242 -0.219 0.125 0.110 0.314 -0.321 -0.305 0.358 -0.303 0.125 0.121 -0.334 0.317 0.314 -0.366 0.333 0.137 0.134 -0.784 0.794 0.785 -0.881 0.790 0.091 0.086 0.459 -0.460 -0.459 0.457 -0.460 0.049 0.050 0.321 0.318 0.322 0.323 0.326 0.051 0.055 -0.184 -0.182 -0.190 -0.191 -0.181 0.053 0.048 0.485 0.482 0.482 0.476 0.486 0.051 0.053

0.144 0.113 0.116 0.139 0.131 0.090 0.048 0.052 0.056 0.053

0.139 0.150 0.135 0.132 0.152 0.203 0.108 0.045 0.069 0.040

0.138 0.525 -0.790 -0.511 0.527 -0.528 0.119 2.974 -2.763 -3.011 2.260 -2.843 0.120 1.800 -2.047 -1.941 1.679 -1.887 0.132 2.680 -2.761 -2.426 2.536 -2.544 0.138 -2.518 2.577 2.638 -2.271 2.501 0.092 -9.033 9.575 9.182 -4.048 8.921 0.052 9.122 -8.932 -9.228 4.130 8.666 0.054 6.333 5.870 6.169 7.205 5.950 0.052 -3.396 -3.779 -3.217 -2.617 3.447 0.054 9.451 9.042 9.135 12.103 8.897

Path coeff.

PLS Path Modeling ­ A Software Review 17

Since in LVPLS missing data treatment depends on whether data is missing on a whole block or just on some (but not all) manifest variables, two different missing data schemes are applied. For the formative construct it is assumed that values are missing for only some manifest variables. In contrast, for the reflective endogenous latent variable, missing data are produced such that values are absent for all of its indicators. Missing data (about 10 % for each variable) have been generated completely at random (MCAR).
Since the programs in part offer different options in the case of missing data, some discrepancies in the results are expected. However, at least the graphical interfaces for LVPLS (PLS-GUI, VisualPLS ) should produce the same results as Lohm¨oller's program. The actual results nevertheless show unexpected differences. Obviously, these differences are caused by an incorrect setup of the input file to LVPLS. In both interfaces one is allowed to specify one specific value for missing data (e.g., -1) which is then used to add a "missing data case" to the data. In the input file, this value should exactly correspond to the missing data values in the raw data. In PLS-GUI and VisualPLS, however, this code is transferred in a way which does not correspond to the Fortran format specified for reading the data. If the raw data has decimal places, this means that the missing data code differs from the missing values contained in the data. For example, in the following input file generated by PLS-GUI the variables have four decimal places. For the given Fortran format, a value of -1 (for missing data) is written as -10000 whereas the missing data case includes a -1 instead.

COMMENT

LVPLS input file generated by PLS-GUI 2.0.1

CEND

PLSX

Missing Data - Demonstration

2-201 12255 2 100 0 1 0 0

64

10

11

x1 x2 x3 x4 x5 x6 y1 y2 y3

y4

0 011 (2A4,2F2.0)

Ksi . .

Eta 1 .

0 0 0 0(2A4,10F8.4)

MISSING

-1 -1 -1 ... -1 -1 -1 -1

Case 1 -1376 -10000 4377 ... -3641 4779 -4490 -4477

Case 2 -3732 -12294 -10674 ... -8361 13691 -5158 -1034

Case 3 6682 12600 -3648 ... -2730 -9584 -2378 -3407

Case 4 3872 -11195 13664 ... -1358 10213 -5583 8641

Case 5 7190 -15879 -10000 ... -10000 -10000 -10000 -10000

Case 6 -17634 -10000 19101 ... -15699 -8155 -3705 -14140

...

Case 199 4730 -17174 8129 ... 10000 19261 12698 9710

Case 200 -14363 -10805 -1490 ... -3009 2840 4169 2750

STOP

Correcting the wrong coding in the missing data case of the input file for LVPLS produced by the interfaces and running it with the executable PLS file leads to the correct results. In PLS-Graph and SPAD-PLS, the missing

18 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
data procedure is implemented correctly. The more advanced methods to deal with missing data (EM algorithm, NIPALS) announced for SPAD-PLS were not available in the test version for this review. Since SmartPLS only allows for mean imputation or casewise deletion, different results emerge compared to the other programs.
4.3 Data Set 3 ­ Multi-collinearity
Multi-collinearity can be a problem for the estimation of the relationships within (formative) measurement models as well as the effects among the latent variables. So far SPAD-PLS is the only program which takes this problem into account by offering an option to use PLS regression in the estimation of the outer weights and the path coefficients. Here we only focus on the problem of multicollinearity at the latent construct level. We therefore compare the results of SPAD-PLS with PLS regression in the case of multi-collinearity with the results of the remaining programs based on common OLS regressions. A data set (N = 100) with five correlated exogenous latent variables has been created (see the model in Figure 5).
The resulting variance inflation factors (VIF) for these constructs are between VIF = 16 and VIF = 38. According to general rules of thumb (e.g., Kutner et al. (2004)), values above VIF = 10 allude to a potentially severe problem of multi-collinearity. The results reported in Table 6 show very similar estimates for the path coefficients both under OLS and PLS regression. In addition, the highest contribution to R2 is determined for those two exogenous variables which have the smallest "true" effect size (2 and 4). Given the great discrepancies between the "true" values and the estimated coefficients, SPAD-PLS does not really seem to cure the problem of multi-collinearity, at least in our data set.

True OLS

PLS

values regression regression

1  1 0.50 -0.003 0.029

Structural model Path coefficients

2  1 -0.15 0.382

0.378

3  1 0.25 0.156

0.114

4  1 0.10 0.288

0.298

5  1 0.30 0.004

0.008

1  2 0.40 0.441

0.441

Table 6. Comparisons of the Results for Data Set 3 ­ OLS versus PLS Regression Path Coefficients

PLS Path Modeling ­ A Software Review 19
Fig. 5. Path Model Used for Simulating Data Set 3 (all variables are standardized)
5 Conclusion
In this review on PLS path modeling programs, LVPLS and the more recent software packages (PLS-GUI, VisualPLS, PLSGraph, SPAD-PLS, and SmartPLS ) have been characterized and compared with each other. A special emphasis has been placed on the criteria ease-of-use and methodological options. Whereas specifying path models in LVPLS is rather inconvenient, all recent programs have made a huge step with respect to ease-of-use, reaching now the same level as the software used in covariance structure analysis. Individual strengths in user-friendliness have been identified, such as supporting the estimation of interaction effects (VisualPLS and SmartPLS ) and helpful export options (SPAD-PLS and SmartPLS ).
One main methodological improvement is the bootstrap procedure for assessing the significance of parameter estimates, which is now implemented in all software packages and supplements the blindfolding and jacknifing resampling routines of LVPLS. A specific strength of SPAD-PLS is the estimation of bootstrap confidence intervals for the parameters. Model validation is another important aspect; although some measures like the goodness-of-fit index

20 Dirk Temme, Henning Kreis, and Lutz Hildebrandt
(Tenenhaus et al., 2005) have been discussed in the literature, so far only the blindfolding cross-validation indices (cv-redundancy and cv-communality) are offered. The performance of the different programs has also been tested on data sets with missing data and multi-collinearity. Here, both PLS-GUI and Visual-PLS provide an incorrect missing data code for the LVPLS input file. A major improvement in dealing with missing data is expected for the next release of SPAD-PLS.
Multi-collinearity is a problem both for the estimation of weights in the case of formative constructs and the estimation path coefficients. To cure this problem, SPAD-PLS has implemented a PLS regression routine. In our study, results for simulated data, however, are very similar to those resulting from OLS regression. This issue should be the subject of a comprehensive Monte Carlo study.
Overall, there is considerable demand for implementations of the various methodological advances documented, for example, in this volume.
References
Allison, P. D. (2002). Missing Data. Sage, Thousand Oaks, CA. Chin, W. W. (1993-2003). PLS Graph ­ Version 3.0. Soft Modeling Inc. Chin, W. W. (2000). Frequently Asked Questions ­ Partial Least Squares &
PLS-Graph. http://disc-nt.cba.uh.edu/chin/plsfac.htm. Chin, W. W. (2001). PLS-Graph User's Guide Version 3.0. C. T. Bauer
College of Business, University of Houston, Houston, Texas. Chin, W. W., Marcolin, B. L., and Newsted, P. N. (2003). A partial least
squares latent variable modeling approach for measuring interaction effects: Results from a monte carlo simulation study and an electronic-mail emotion/adoption study. Information Systems Research, 14(2):189­217. Diamantopoulos, A. and Winklhofer, H. (2001). Index construction with formative indicators: an alternative to scale development. Journal of Marketing Research, 38(2):269­277. Fu, J.-R. (2006a). VisualPLS ­ Partial Least Square (PLS) Regression ­ An Enhanced GUI for Lvpls (PLS 1.8 PC) Version 1.04. National Kaohsiung University of Applied Sciences, Taiwan, ROC. Fu, J.-R. (2006b). VisualPLS ­ Partial Least Square (PLS) Regression ­ An Enhanced GUI for Lvpls (PLS 1.8 PC) Version 1.04. http://www2.kuas. edu.tw/prof/fred/vpls/index.html. Haitovsky, Y. (1968). Missing data in regression analysis. Journal of the Royal Statistical Society, 30:67­82. Hansmann, K.-W. and Ringle, C. M. (2004). SmartPLS Benutzerhandbuch. Universit¨at Hamburg, Hamburg. Jarvis, C. B., MacKenzie, S. B., and Podsakoff, P. M. (2003). A critical review of construct indicators and measurement model misspecifica-

PLS Path Modeling ­ A Software Review 21
tion in marketing and consumer research. Journal of Consumer Research, 30(September):199­218. Kutner, M. H., Nachtsheim, C. J., Neter, J., and Li, W. (2004). Applied Linear Statistical Models. McGraw-Hill/Irwin, Homewood, IL, 5 edition. Li, Y. (2003). PLS-GUI User Manual ­ A Graphic User Interface for LVPLS (PLS-PC 1.8) ­ Version 1.0. University of South Carolina, Columbia, SC. Li, Y. (2005). PLS-GUI ­ Graphic User Interface for Partial Least Squares (PLS-PC 1.8) ­ Version 2.0.1 beta. University of South Carolina, Columbia, SC. Little, R. J. A. and Rubin, D. B. (2002). Statistical Analysis with Missing Data. Wiley, Hoboken, NJ, 2 edition. Lohm¨oller, J.-B. (1984). LVPLS Program Manual - Version 1.6. Zentralarchiv fu¨r Empirische Sozialforschung, Universita¨t zu Ko¨ln, Ko¨ln. Lohmo¨ller, J.-B. (1987). PLS-PC: Latent Variables Path Analysis with Partial Least Squares - Version 1.8 for PCs under MS-DOS. MacCallum, R. C. and Browne, M. W. (1993). The use of causal indicators in covariance structure models: Some practical issues. Psychologicval Bulletin, 114:533­541. MacKenzie, S. B., Podsakoff, P. M., and Jarvis, C. B. (2005). The problem of measurement model misspecification in behavioral and organizational research and some recommended solutions. Journal of Applied Psychology, 90(4):710­730. McLachlan, J. and Peel, D. (2000). Finite Mixture Models. Wiley, New York. Nunnally, J. C. and Bernstein, I. H. (1994). Psychometric Theory. McGrawHill, New York, 3 edition. Ringle, C. M., Wende, S., and Will, A. (2005). SmartPLS ­ Version 2.0. Universit¨at Hamburg, Hamburg. Sellin, N. (1989). PLSPATH - Version 3.01. Application Manual. Universita¨t Hamburg, Hamburg. Tenenhaus, M., Vinzi, V. E., Chatelin, Y.-M., and Lauro, C. (2005). PLS path modeling. Computational Statistics and Data Analysis, 48(1):159­205. Test&Go (2006). Spad Version 6.0.0. Paris, France. Vinzi, V., Tenenhaus, M., and Chatelin, Y. (2004). ESIS-PLS software. In Demonstration at Club PLS 2004 Meeting, Jouy-en-Josas, France. Wold, H. (1982). Soft modeling: The basic design and some extensions. In Jo¨reskog, K. G. and Wold, H., editors, Systems Under Indirect Observation. Part II, pages 1­54. North-Holland, Amsterdam. Wold, H. (1985). Partial least squares. In Kotz, S. and Johnson, N. L., editors, Encyclopaedia of Statistical Sciences, Volume 6, pages 581­591. Wiley, New York.

SFB 649 Discussion Paper Series 2006
For a complete list of Discussion Papers published by the SFB 649, please visit http://sfb649.wiwi.hu-berlin.de.
001 "Calibration Risk for Exotic Options" by Kai Detlefsen and Wolfgang K. Härdle, January 2006.
002 "Calibration Design of Implied Volatility Surfaces" by Kai Detlefsen and Wolfgang K. Härdle, January 2006.
003 "On the Appropriateness of Inappropriate VaR Models" by Wolfgang Härdle, Zdenk Hlávka and Gerhard Stahl, January 2006.
004 "Regional Labor Markets, Network Externalities and Migration: The Case of German Reunification" by Harald Uhlig, January/February 2006.
005 "British Interest Rate Convergence between the US and Europe: A Recursive Cointegration Analysis" by Enzo Weber, January 2006.
006 "A Combined Approach for Segment-Specific Analysis of Market Basket Data" by Yasemin Boztu and Thomas Reutterer, January 2006.
007 "Robust utility maximization in a stochastic factor model" by Daniel Hernández­Hernández and Alexander Schied, January 2006.
008 "Economic Growth of Agglomerations and Geographic Concentration of Industries - Evidence for Germany" by Kurt Geppert, Martin Gornig and Axel Werwatz, January 2006.
009 "Institutions, Bargaining Power and Labor Shares" by Benjamin Bental and Dominique Demougin, January 2006.
010 "Common Functional Principal Components" by Michal Benko, Wolfgang Härdle and Alois Kneip, Jauary 2006.
011 "VAR Modeling for Dynamic Semiparametric Factors of Volatility Strings" by Ralf Brüggemann, Wolfgang Härdle, Julius Mungo and Carsten Trenkler, February 2006.
012 "Bootstrapping Systems Cointegration Tests with a Prior Adjustment for Deterministic Terms" by Carsten Trenkler, February 2006.
013 "Penalties and Optimality in Financial Contracts: Taking Stock" by Michel A. Robe, Eva-Maria Steiger and Pierre-Armand Michel, February 2006.
014 "Core Labour Standards and FDI: Friends or Foes? The Case of Child Labour" by Sebastian Braun, February 2006.
015 "Graphical Data Representation in Bankruptcy Analysis" by Wolfgang Härdle, Rouslan Moro and Dorothea Schäfer, February 2006.
016 "Fiscal Policy Effects in the European Union" by Andreas Thams, February 2006.
017 "Estimation with the Nested Logit Model: Specifications and Software Particularities" by Nadja Silberhorn, Yasemin Boztu and Lutz Hildebrandt, March 2006.
018 "The Bologna Process: How student mobility affects multi-cultural skills and educational quality" by Lydia Mechtenberg and Roland Strausz, March 2006.
019 "Cheap Talk in the Classroom" by Lydia Mechtenberg, March 2006. 020 "Time Dependent Relative Risk Aversion" by Enzo Giacomini, Michael
Handel and Wolfgang Härdle, March 2006. 021 "Finite Sample Properties of Impulse Response Intervals in SVECMs with
Long-Run Identifying Restrictions" by Ralf Brüggemann, March 2006. 022 "Barrier Option Hedging under Constraints: A Viscosity Approach" by
Imen Bentahar and Bruno Bouchard, March 2006.
SFB 649, Spandauer Straße 1, D-10178 Berlin http://sfb649.wiwi.hu-berlin.de
This research was supported by the Deutsche Forschungsgemeinschaft through the SFB 649 "Economic Risk".

023 "How Far Are We From The Slippery Slope? The Laffer Curve Revisited" by Mathias Trabandt and Harald Uhlig, April 2006.
024 "e-Learning Statistics ­ A Selective Review" by Wolfgang Härdle, Sigbert Klinke and Uwe Ziegenhagen, April 2006.
025 "Macroeconomic Regime Switches and Speculative Attacks" by Bartosz Makowiak, April 2006.
026 "External Shocks, U.S. Monetary Policy and Macroeconomic Fluctuations in Emerging Markets" by Bartosz Makowiak, April 2006.
027 "Institutional Competition, Political Process and Holdup" by Bruno Deffains and Dominique Demougin, April 2006.
028 "Technological Choice under Organizational Diseconomies of Scale" by Dominique Demougin and Anja Schöttner, April 2006.
029 "Tail Conditional Expectation for vector-valued Risks" by Imen Bentahar, April 2006.
030 "Approximate Solutions to Dynamic Models ­ Linear Methods" by Harald Uhlig, April 2006.
031 "Exploratory Graphics of a Financial Dataset" by Antony Unwin, Martin Theus and Wolfgang Härdle, April 2006.
032 "When did the 2001 recession really start?" by Jörg Polzehl, Vladimir Spokoiny and Ctlin Stric, April 2006.
033 "Varying coefficient GARCH versus local constant volatility modeling. Comparison of the predictive power" by Jörg Polzehl and Vladimir Spokoiny, April 2006.
034 "Spectral calibration of exponential Lévy Models [1]" by Denis Belomestny and Markus Reiß, April 2006.
035 "Spectral calibration of exponential Lévy Models [2]" by Denis Belomestny and Markus Reiß, April 2006.
036 "Spatial aggregation of local likelihood estimates with applications to classification" by Denis Belomestny and Vladimir Spokoiny, April 2006.
037 "A jump-diffusion Libor model and its robust calibration" by Denis Belomestny and John Schoenmakers, April 2006.
038 "Adaptive Simulation Algorithms for Pricing American and Bermudan Options by Local Analysis of Financial Market" by Denis Belomestny and Grigori N. Milstein, April 2006.
039 "Macroeconomic Integration in Asia Pacific: Common Stochastic Trends and Business Cycle Coherence" by Enzo Weber, May 2006.
040 "In Search of Non-Gaussian Components of a High-Dimensional Distribution" by Gilles Blanchard, Motoaki Kawanabe, Masashi Sugiyama, Vladimir Spokoiny and Klaus-Robert Müller, May 2006.
041 "Forward and reverse representations for Markov chains" by Grigori N. Milstein, John G. M. Schoenmakers and Vladimir Spokoiny, May 2006.
042 "Discussion of 'The Source of Historical Economic Fluctuations: An Analysis using Long-Run Restrictions' by Neville Francis and Valerie A. Ramey" by Harald Uhlig, May 2006.
043 "An Iteration Procedure for Solving Integral Equations Related to Optimal Stopping Problems" by Denis Belomestny and Pavel V. Gapeev, May 2006.
044 "East Germany's Wage Gap: A non-parametric decomposition based on establishment characteristics" by Bernd Görzig, Martin Gornig and Axel Werwatz, May 2006.
045 "Firm Specific Wage Spread in Germany - Decomposition of regional differences in inter firm wage dispersion" by Bernd Görzig, Martin Gornig and Axel Werwatz, May 2006.
SFB 649, Spandauer Straße 1, D-10178 Berlin http://sfb649.wiwi.hu-berlin.de
This research was supported by the Deutsche Forschungsgemeinschaft through the SFB 649 "Economic Risk".

046 "Produktdiversifizierung: Haben die ostdeutschen Unternehmen den Anschluss an den Westen geschafft? ­ Eine vergleichende Analyse mit Mikrodaten der amtlichen Statistik" by Bernd Görzig, Martin Gornig and Axel Werwatz, May 2006.
047 "The Division of Ownership in New Ventures" by Dominique Demougin and Oliver Fabel, June 2006.
048 "The Anglo-German Industrial Productivity Paradox, 1895-1938: A Restatement and a Possible Resolution" by Albrecht Ritschl, May 2006.
049 "The Influence of Information Costs on the Integration of Financial Markets: Northern Europe, 1350-1560" by Oliver Volckart, May 2006.
050 "Robust Econometrics" by Pavel Cízek and Wolfgang Härdle, June 2006. 051 "Regression methods in pricing American and Bermudan options using
consumption processes" by Denis Belomestny, Grigori N. Milstein and Vladimir Spokoiny, July 2006. 052 "Forecasting the Term Structure of Variance Swaps" by Kai Detlefsen and Wolfgang Härdle, July 2006. 053 "Governance: Who Controls Matters" by Bruno Deffains and Dominique Demougin, July 2006. 054 "On the Coexistence of Banks and Markets" by Hans Gersbach and Harald Uhlig, August 2006. 055 "Reassessing Intergenerational Mobility in Germany and the United States: The Impact of Differences in Lifecycle Earnings Patterns" by Thorsten Vogel, September 2006. 056 "The Euro and the Transatlantic Capital Market Leadership: A Recursive Cointegration Analysis" by Enzo Weber, September 2006. 057 "Discounted Optimal Stopping for Maxima in Diffusion Models with Finite Horizon" by Pavel V. Gapeev, September 2006. 058 "Perpetual Barrier Options in Jump-Diffusion Models" by Pavel V. Gapeev, September 2006. 059 "Discounted Optimal Stopping for Maxima of some Jump-Diffusion Processes" by Pavel V. Gapeev, September 2006. 060 "On Maximal Inequalities for some Jump Processes" by Pavel V. Gapeev, September 2006. 061 "A Control Approach to Robust Utility Maximization with Logarithmic Utility and Time-Consistent Penalties" by Daniel Hernández­Hernández and Alexander Schied, September 2006. 062 "On the Difficulty to Design Arabic E-learning System in Statistics" by Taleb Ahmad, Wolfgang Härdle and Julius Mungo, September 2006. 063 "Robust Optimization of Consumption with Random Endowment" by Wiebke Wittmüß, September 2006. 064 "Common and Uncommon Sources of Growth in Asia Pacific" by Enzo Weber, September 2006. 065 "Forecasting Euro-Area Variables with German Pre-EMU Data" by Ralf Brüggemann, Helmut Lütkepohl and Massimiliano Marcellino, September 2006. 066 "Pension Systems and the Allocation of Macroeconomic Risk" by Lans Bovenberg and Harald Uhlig, September 2006. 067 "Testing for the Cointegrating Rank of a VAR Process with Level Shift and Trend Break" by Carsten Trenkler, Pentti Saikkonen and Helmut Lütkepohl, September 2006. 068 "Integral Options in Models with Jumps" by Pavel V. Gapeev, September 2006. 069 "Constrained General Regression in Pseudo-Sobolev Spaces with Application to Option Pricing" by Zdenk Hlávka and Michal Pesta, September 2006.
SFB 649, Spandauer Straße 1, D-10178 Berlin http://sfb649.wiwi.hu-berlin.de
This research was supported by the Deutsche Forschungsgemeinschaft through the SFB 649 "Economic Risk".

070 "The Welfare Enhancing Effects of a Selfish Government in the Presence of Uninsurable, Idiosyncratic Risk" by R. Anton Braun and Harald Uhlig, September 2006.
071 "Color Harmonization in Car Manufacturing Process" by Anton Andriyashin, Michal Benko, Wolfgang Härdle, Roman Timofeev and Uwe Ziegenhagen, October 2006.
072 "Optimal Interest Rate Stabilization in a Basic Sticky-Price Model" by Matthias Paustian and Christian Stoltenberg, October 2006.
073 "Real Balance Effects, Timing and Equilibrium Determination" by Christian Stoltenberg, October 2006.
074 "Multiple Disorder Problems for Wiener and Compound Poisson Processes With Exponential Jumps" by Pavel V. Gapeev, October 2006.
075 "Inhomogeneous Dependency Modelling with Time Varying Copulae" by Enzo Giacomini, Wolfgang K. Härdle, Ekaterina Ignatieva and Vladimir Spokoiny, November 2006.
076 "Convenience Yields for CO2 Emission Allowance Futures Contracts" by Szymon Borak, Wolfgang Härdle, Stefan Trück and Rafal Weron, November 2006.
077 "Estimation of Default Probabilities with Support Vector Machines" by Shiyi Chen, Wolfgang Härdle and Rouslan Moro, November 2006.
078 "GHICA - Risk Analysis with GH Distributions and Independent Components" by Ying Chen, Wolfgang Härdle and Vladimir Spokoiny, November 2006.
079 "Do Individuals Recognize Cascade Behavior of Others? - An Experimental Study ­" by Tim Grebe, Julia Schmid and Andreas Stiehler, November 2006.
080 "The Uniqueness of Extremum Estimation" by Volker Krätschmer, December 2006.
081 "Compactness in Spaces of Inner Regular Measures and a General Portmanteau Lemma" by Volker Krätschmer, December 2006.
082 "Probleme der Validierung mit Strukturgleichungsmodellen" by Lutz Hildebrandt and Dirk Temme, December 2006.
083 "Formative Measurement Models in Covariance Structure Analysis: Specification and Identification" by Dirk Temme and Lutz Hildebrandt, December 2006.
084 "PLS Path Modeling ­ A Software Review" by Dirk Temme, Henning Kreis and Lutz Hildebrandt, December 2006.
SFB 649, Spandauer Straße 1, D-10178 Berlin http://sfb649.wiwi.hu-berlin.de
This research was supported by the Deutsche Forschungsgemeinschaft through the SFB 649 "Economic Risk".

